<?php

/**
 * @file
 * Tests for media types.
 */

/**
 * Defines media type creation and management test cases.
 */
class MediaTypeTest extends MediaTestHelper {

  public static function getInfo() {
    return array(
      'name' => 'Media types',
      'description' => 'Tests media types',
      'group' => 'Media',
    );
  }

  /**
   * Tests creating a new type.
   */
  function testCreate() {
    $type_machine_name = 'foo';
    $type = $this->createType(array(
      'name' => $type_machine_name,
      'label' => 'foobar',
    ));
    $loaded_type = media_type_load($type_machine_name);
    $this->assertEqual($loaded_type->label, 'foobar', 'Was able to create a type and retreive it.');
  }

  /**
   * Tests that weight is respected when types are created.
   */
  function testOrder() {
    $type = $this->createType(array(
      'name' => 'last',
      'label' => 'Last',
      'weight' => 100,
    ));
    $type = $this->createType(array(
      'name' => 'first',
      'label' => 'First',
    ));
    $types = media_type_get_types();
    $keys = array_keys($types);
    $this->assertTrue(isset($types['last']) && isset($types['first']), 'Both types were saved.');
    $this->assertTrue(array_search('last', $keys) > array_search('first', $keys), 'The type which was supposed to come first came first.');
  }
}
